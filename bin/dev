#!/usr/bin/env node
/* eslint-disable */

var bs = require("browser-sync").create();
var babel = require("babel-core");
var gaze = require('gaze');
var fs = require('fs');
var path = require('path');

var exec = require('child_process').exec;

gaze('src/**/*', function(err, watcher) {
  if (err) throw err;
  watcher.on('changed', function(sourceFile) {
    console.log(sourceFile + " has changed. Recompiling...");
    try {
      targetFile = path.relative(__dirname, sourceFile).replace(/src/, 'dist');
      targetFile = path.resolve(__dirname, targetFile);
      fs.writeFile(targetFile, babel.transformFileSync(sourceFile).code, () => {
        bs.reload()
        console.log(`${sourceFile} recompiled ! Reloading browser...`);
      });
    } catch (e) {
      console.error(e.message, e.stack);
    }
  });
});


gaze('index.html', function(err, watcher) {
  if (err) throw err;
  watcher.on('changed', function() {
    bs.reload();
  })
});

bs.init({
  server: true
});

process.once('SIGINT', function() {
    process.exit(0);
});
